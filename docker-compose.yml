services:
  web:
    # ==========================================================================
    # local image
    # ==========================================================================
    build:
      context: .
      dockerfile: Dockerfile
    # ==========================================================================
    # remote image (fly.io)
    # image: registry.fly.io/melonook:<tag>
    # ==========================================================================
    container_name: n8n
    environment:
      - NODE_ENV=production
    ports:
      - 5678:5678
    networks:
      - n8n_network
    depends_on:
      db:
        condition: service_healthy
    # env_file: .env
    restart: unless-stopped

  db:
    image: postgres:18.0-alpine
    container_name: n8n_db
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n
      - POSTGRES_DB=n8n
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n_network
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U melonook
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:5.4.0
    container_name: n8n_adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - n8n_network
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
    name: n8n_postgres_data

networks:
  n8n_network:
    name: n8n_network
    driver: bridge
    # external: true
